{
  "metadata" : {
    "name" : "Visualization",
    "user_save_timestamp" : "1970-01-01T01:00:00.000Z",
    "auto_save_timestamp" : "1970-01-01T01:00:00.000Z",
    "language_info" : {
      "name" : "scala",
      "file_extension" : "scala",
      "codemirror_mode" : "text/x-scala"
    },
    "trusted" : true,
    "customLocalRepo" : null,
    "customRepos" : null,
    "customDeps" : [ "org.apache.kafka %% kafka % 0.8.2.1", "org.apache.kafka % kafka-clients % 0.11.0.0", "org.apache.spark %% spark-core % 2.1.1", "org.apache.spark %% spark-streaming % 2.1.1", "org.apache.spark %% spark-streaming-kafka-0-8 % 2.1.1", "com.typesafe.play %% play-json % 2.4.0" ],
    "customImports" : null,
    "customArgs" : null,
    "customSparkConf" : null
  },
  "cells" : [ {
    "metadata" : {
      "id" : "2E7CD7525BC2411DADB4CB2177AFB396"
    },
    "cell_type" : "markdown",
    "source" : "# Scala Project: MoviesPopularity"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "002FD47C8387498C8898D38143240A59"
    },
    "cell_type" : "code",
    "source" : "import org.apache.spark.SparkConf\nimport org.apache.spark.streaming.kafka.KafkaUtils\nimport org.apache.spark.streaming.{Seconds, StreamingContext}\nimport org.apache.spark.streaming.dstream.InputDStream\nimport kafka.serializer.StringDecoder\nimport play.api.libs.json.Json\nimport notebook.front.widgets.charts",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "import org.apache.spark.SparkConf\nimport org.apache.spark.streaming.kafka.KafkaUtils\nimport org.apache.spark.streaming.{Seconds, StreamingContext}\nimport org.apache.spark.streaming.dstream.InputDStream\nimport kafka.serializer.StringDecoder\nimport play.api.libs.json.Json\nimport notebook.front.widgets.charts\n"
    }, {
      "metadata" : { },
      "data" : {
        "text/html" : ""
      },
      "output_type" : "execute_result",
      "execution_count" : 1,
      "time" : "Took: 4 seconds 36 milliseconds, at 2017-7-10 22:38"
    } ]
  }, {
    "metadata" : {
      "id" : "D324BFCEE31E4F89B782C8EE73C1ACB4"
    },
    "cell_type" : "markdown",
    "source" : "#### Methods"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "2161D1E33D074F6C88DD32A6EBBED5E5"
    },
    "cell_type" : "code",
    "source" : "\n  def setUpStream(brokers: String, topic: String, ssc: StreamingContext): InputDStream[(String, String)] = {\n\n    val kafkaParams = Map[String, String](\"bootstrap.servers\" -> brokers)\n\n    KafkaUtils.createDirectStream[String, String, StringDecoder, StringDecoder](\n        ssc,\n        kafkaParams,\n        Set(topic)\n    )\n  }",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "setUpStream: (brokers: String, topic: String, ssc: org.apache.spark.streaming.StreamingContext)org.apache.spark.streaming.dstream.InputDStream[(String, String)]\n"
    }, {
      "metadata" : { },
      "data" : {
        "text/html" : ""
      },
      "output_type" : "execute_result",
      "execution_count" : 3,
      "time" : "Took: 2 seconds 983 milliseconds, at 2017-7-10 22:43"
    } ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "presentation" : {
        "tabs_state" : "{\n  \"tab_id\": \"#tab916006759-0\"\n}",
        "pivot_chart_state" : "{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Minimum\",\n  \"rendererName\": \"Bar Chart\"\n}"
      },
      "id" : "3E67AA5A8C664319883A11CA7E2C62B2"
    },
    "cell_type" : "code",
    "source" : "val brokers = \"localhost:9092\"\n\nval m = 200\nval size_x = 200\nval size_y = 200\nval ssc = StreamingContext.getActiveOrCreate(() => new StreamingContext(sc, Seconds(2)))\n\n/* Setting up streams */\nval genreStream = setUpStream(brokers, \"genre\", ssc)\nval directorStream = setUpStream(brokers, \"director\", ssc)\nval scoreStream = setUpStream(brokers, \"score\", ssc)\nval actorStream = setUpStream(brokers, \"actors\", ssc)\nval yearsStream = setUpStream(brokers, \"years\", ssc)\n\n/* Creating charts */\nval genreBs  = BarChart(List((\"\", 0)), maxPoints =m, sizes=(size_x, size_y))\nval scoreBs = BarChart(List((\"\", 0)), maxPoints=m, sizes=(size_x, size_y))\nval directorBs = BarChart(List((\"\", 0)), maxPoints =m, sizes=(size_x, size_y))\nval yearsLs = LineChart(List((1980, 0)), maxPoints =m, sizes=(size_x, size_y))\nval actorBs = BarChart(List((\"\", 0)), maxPoints =m, sizes=(size_x, size_y))\n\n/* Updating values */\ngenreStream.map(_._2)\n            .map(Json.parse(_).as[Map[String, Int]])\n            .flatMap(_.toList)\n            .foreachRDD { rdd => genreBs.applyOn(rdd.collect().toList) }\n\ndirectorStream.map(_._2)\n            .map(Json.parse(_).as[Map[String, Int]])\n            .flatMap(_.toList)\n            .foreachRDD { rdd => directorBs.applyOn(rdd.collect().toList) }\n            \nscoreStream.map(_._2)\n            .map(Json.parse(_).as[Map[String, Int]])\n            .flatMap(_.toList)\n            .foreachRDD { rdd => scoreBs.applyOn(rdd.collect().toList) }\n              \nyearsStream.map(_._2)\n            .map(Json.parse(_).as[Map[String, Int]])\n            .map(_.map(x => (x._1.toInt, x._2)))\n            .flatMap(_.toList)\n            .foreachRDD { rdd => yearsLs.applyOn(rdd.collect().toList) }\n            \nactorStream.map(_._2)\n            .map(Json.parse(_).as[Map[String, Int]])\n            .flatMap(_.toList)\n            .foreachRDD { rdd => actorBs.applyOn(rdd.collect().toList) }\n                          \n\nssc.start()\n\ncontainerFluid(\n  List(\n      List((html(<hr/>), 12)),\n      List(\n        (genreBs, 6),\n        (actorBs, 6)\n      ),\n     List(\n       (scoreBs, 6),\n       (directorBs, 6)\n    ),\n    List(\n      (yearsLs, 6)\n    )\n))\n\n",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "brokers: String = localhost:9092\nm: Int = 200\nsize_x: Int = 200\nsize_y: Int = 200\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@124cfbcc\ngenreStream: org.apache.spark.streaming.dstream.InputDStream[(String, String)] = org.apache.spark.streaming.kafka.DirectKafkaInputDStream@5b59a047\ndirectorStream: org.apache.spark.streaming.dstream.InputDStream[(String, String)] = org.apache.spark.streaming.kafka.DirectKafkaInputDStream@158b733f\nscoreStream: org.apache.spark.streaming.dstream.InputDStream[(String, String)] = org.apache.spark.streaming.kafka.DirectKafkaInputDStream@146c0f0a\nactorStream: org.apache.spark.streaming.dstream.InputDStream[(String, String)] = org.apache.spark.streaming.kafka.DirectKafkaInputDStream@6d033ad6\nyearsStream: org.apa..."
    }, {
      "metadata" : { },
      "data" : {
        "text/html" : "<div class=\"container-fluid\"><div class=\"row\"><div class=\"col-md-12\"><hr/></div></div><div class=\"row\"><div class=\"col-md-6\"><div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon79b03529d494145c6c5d76b371460378&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;&quot;,&quot;_2&quot;:0}],&quot;genId&quot;:&quot;2025940660&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/barChart'], \n      function(playground, _magicbarChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicbarChart,\n    \"o\": {\"x\":\"_1\",\"y\":\"_2\",\"width\":200,\"height\":200}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon7a2c736c7e7ce351e4f4d24713524a08&quot;,&quot;initialValue&quot;:&quot;1&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon0ddff6192626e0350c9ebaae1846a94f&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div></div><div class=\"col-md-6\"><div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon87dfcc677c21554ce5ca1f0a43868d5b&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;&quot;,&quot;_2&quot;:0}],&quot;genId&quot;:&quot;1521051612&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/barChart'], \n      function(playground, _magicbarChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicbarChart,\n    \"o\": {\"x\":\"_1\",\"y\":\"_2\",\"width\":200,\"height\":200}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon258bafb0052b7f45f4b7992c813e1685&quot;,&quot;initialValue&quot;:&quot;1&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon04db1f8f63e7b7a2ed96fc8970c656a8&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div></div></div><div class=\"row\"><div class=\"col-md-6\"><div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon7d5b298cd3416bb8c7e255d907c6191c&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;&quot;,&quot;_2&quot;:0}],&quot;genId&quot;:&quot;735941937&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/barChart'], \n      function(playground, _magicbarChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicbarChart,\n    \"o\": {\"x\":\"_1\",\"y\":\"_2\",\"width\":200,\"height\":200}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anond95d6cd3cd5aa6f0f678e7ad5148a7ae&quot;,&quot;initialValue&quot;:&quot;1&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anonec899362f1901a392f6ebb661de79343&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div></div><div class=\"col-md-6\"><div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anona113457bdb5728a03710ccf95e1c8d0f&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:&quot;&quot;,&quot;_2&quot;:0}],&quot;genId&quot;:&quot;648576633&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/barChart'], \n      function(playground, _magicbarChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magicbarChart,\n    \"o\": {\"x\":\"_1\",\"y\":\"_2\",\"width\":200,\"height\":200}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon69b18fc065baea617d72bdf4f0202370&quot;,&quot;initialValue&quot;:&quot;1&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon8357896f6dd7276be7a04e60acd7aa42&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div></div></div><div class=\"row\"><div class=\"col-md-6\"><div>\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon90a2280f19f55b44652ceec1008f58bb&quot;,&quot;dataInit&quot;:[{&quot;_1&quot;:1980,&quot;_2&quot;:0}],&quot;genId&quot;:&quot;1274207824&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/playground','../javascripts/notebook/magic/lineChart'], \n      function(playground, _magiclineChart) {\n        // data ==> data-this (in observable.js's scopedEval) ==> this in JS => { dataId, dataInit, ... }\n        // this ==> scope (in observable.js's scopedEval) ==> this.parentElement ==> div.container below (toHtml)\n\n        playground.call(data,\n                        this\n                        ,\n                        {\n    \"f\": _magiclineChart,\n    \"o\": {\"x\":\"_1\",\"y\":\"_2\",\"width\":200,\"height\":200}\n  }\n  \n                        \n                        \n                      );\n      }\n    );/*]]>*/</script>\n    <div>\n      <span class=\"chart-total-item-count\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon9715cbc9525930a5be848be9b93645b0&quot;,&quot;initialValue&quot;:&quot;1&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p> entries total</span>\n      <span class=\"chart-sampling-warning\"><p data-bind=\"text: value\"><script data-this=\"{&quot;valueId&quot;:&quot;anon21923ac6244bab277546f90e90b5c093&quot;,&quot;initialValue&quot;:&quot;&quot;}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/\nreq(\n['observable', 'knockout'],\nfunction (O, ko) {\n  ko.applyBindings({\n      value: O.makeObservable(valueId, initialValue)\n    },\n    this\n  );\n});\n        /*]]>*/</script></p></span>\n      <div>\n      </div>\n    </div></div></div></div></div>"
      },
      "output_type" : "execute_result",
      "execution_count" : 5,
      "time" : "Took: 9 seconds 891 milliseconds, at 2017-7-10 22:45"
    } ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : true,
      "id" : "1CC524E4A25C44C080E01156D4389D9E"
    },
    "cell_type" : "code",
    "source" : "",
    "outputs" : [ ]
  } ],
  "nbformat" : 4
}